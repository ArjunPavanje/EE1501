$date
	Tue Apr 22 23:09:22 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_adder $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " carry_out $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % carry_in $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % carry_in $end
$var wire 4 ( sum [3:0] $end
$var wire 1 " carry_out $end
$var wire 5 ) carry [4:0] $end
$scope begin genblk1[0] $end
$var wire 1 * temp5 $end
$var wire 1 + temp4 $end
$var wire 1 , temp3 $end
$var wire 1 - temp2 $end
$var wire 1 . temp1 $end
$var parameter 2 / i $end
$scope module and1 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 - out $end
$var wire 1 2 temp $end
$upscope $end
$scope module and2 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 , out $end
$var wire 1 5 temp $end
$upscope $end
$scope module and3 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 + out $end
$var wire 1 8 temp $end
$upscope $end
$scope module or1 $end
$var wire 1 - a $end
$var wire 1 , b $end
$var wire 1 * out $end
$var wire 1 9 temp1 $end
$var wire 1 : temp2 $end
$upscope $end
$scope module or2 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 ; out $end
$var wire 1 < temp1 $end
$var wire 1 = temp2 $end
$upscope $end
$scope module xor1 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 . out $end
$var wire 1 @ temp1 $end
$var wire 1 A temp2 $end
$var wire 1 B temp3 $end
$upscope $end
$scope module xor2 $end
$var wire 1 . a $end
$var wire 1 C b $end
$var wire 1 D out $end
$var wire 1 E temp1 $end
$var wire 1 F temp2 $end
$var wire 1 G temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var wire 1 H temp5 $end
$var wire 1 I temp4 $end
$var wire 1 J temp3 $end
$var wire 1 K temp2 $end
$var wire 1 L temp1 $end
$var parameter 2 M i $end
$scope module and1 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 K out $end
$var wire 1 P temp $end
$upscope $end
$scope module and2 $end
$var wire 1 Q a $end
$var wire 1 R b $end
$var wire 1 J out $end
$var wire 1 S temp $end
$upscope $end
$scope module and3 $end
$var wire 1 T a $end
$var wire 1 U b $end
$var wire 1 I out $end
$var wire 1 V temp $end
$upscope $end
$scope module or1 $end
$var wire 1 K a $end
$var wire 1 J b $end
$var wire 1 H out $end
$var wire 1 W temp1 $end
$var wire 1 X temp2 $end
$upscope $end
$scope module or2 $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 Y out $end
$var wire 1 Z temp1 $end
$var wire 1 [ temp2 $end
$upscope $end
$scope module xor1 $end
$var wire 1 \ a $end
$var wire 1 ] b $end
$var wire 1 L out $end
$var wire 1 ^ temp1 $end
$var wire 1 _ temp2 $end
$var wire 1 ` temp3 $end
$upscope $end
$scope module xor2 $end
$var wire 1 L a $end
$var wire 1 a b $end
$var wire 1 b out $end
$var wire 1 c temp1 $end
$var wire 1 d temp2 $end
$var wire 1 e temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var wire 1 f temp5 $end
$var wire 1 g temp4 $end
$var wire 1 h temp3 $end
$var wire 1 i temp2 $end
$var wire 1 j temp1 $end
$var parameter 3 k i $end
$scope module and1 $end
$var wire 1 l a $end
$var wire 1 m b $end
$var wire 1 i out $end
$var wire 1 n temp $end
$upscope $end
$scope module and2 $end
$var wire 1 o a $end
$var wire 1 p b $end
$var wire 1 h out $end
$var wire 1 q temp $end
$upscope $end
$scope module and3 $end
$var wire 1 r a $end
$var wire 1 s b $end
$var wire 1 g out $end
$var wire 1 t temp $end
$upscope $end
$scope module or1 $end
$var wire 1 i a $end
$var wire 1 h b $end
$var wire 1 f out $end
$var wire 1 u temp1 $end
$var wire 1 v temp2 $end
$upscope $end
$scope module or2 $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 w out $end
$var wire 1 x temp1 $end
$var wire 1 y temp2 $end
$upscope $end
$scope module xor1 $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 j out $end
$var wire 1 | temp1 $end
$var wire 1 } temp2 $end
$var wire 1 ~ temp3 $end
$upscope $end
$scope module xor2 $end
$var wire 1 j a $end
$var wire 1 !" b $end
$var wire 1 "" out $end
$var wire 1 #" temp1 $end
$var wire 1 $" temp2 $end
$var wire 1 %" temp3 $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var wire 1 &" temp5 $end
$var wire 1 '" temp4 $end
$var wire 1 (" temp3 $end
$var wire 1 )" temp2 $end
$var wire 1 *" temp1 $end
$var parameter 3 +" i $end
$scope module and1 $end
$var wire 1 ," a $end
$var wire 1 -" b $end
$var wire 1 )" out $end
$var wire 1 ." temp $end
$upscope $end
$scope module and2 $end
$var wire 1 /" a $end
$var wire 1 0" b $end
$var wire 1 (" out $end
$var wire 1 1" temp $end
$upscope $end
$scope module and3 $end
$var wire 1 2" a $end
$var wire 1 3" b $end
$var wire 1 '" out $end
$var wire 1 4" temp $end
$upscope $end
$scope module or1 $end
$var wire 1 )" a $end
$var wire 1 (" b $end
$var wire 1 &" out $end
$var wire 1 5" temp1 $end
$var wire 1 6" temp2 $end
$upscope $end
$scope module or2 $end
$var wire 1 &" a $end
$var wire 1 '" b $end
$var wire 1 7" out $end
$var wire 1 8" temp1 $end
$var wire 1 9" temp2 $end
$upscope $end
$scope module xor1 $end
$var wire 1 :" a $end
$var wire 1 ;" b $end
$var wire 1 *" out $end
$var wire 1 <" temp1 $end
$var wire 1 =" temp2 $end
$var wire 1 >" temp3 $end
$upscope $end
$scope module xor2 $end
$var wire 1 *" a $end
$var wire 1 ?" b $end
$var wire 1 @" out $end
$var wire 1 A" temp1 $end
$var wire 1 B" temp2 $end
$var wire 1 C" temp3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 +"
b10 k
b1 M
b0 /
$end
#0
$dumpvars
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
0;"
0:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
02"
x1"
x0"
0/"
x."
0-"
0,"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
0{
0z
xy
xx
xw
xv
xu
xt
xs
0r
xq
xp
0o
xn
0m
0l
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
0]
0\
x[
xZ
xY
xX
xW
xV
xU
0T
xS
xR
0Q
xP
0O
0N
xL
xK
xJ
xI
xH
xG
xF
xE
xD
0C
xB
xA
x@
0?
0>
x=
x<
x;
x:
x9
x8
07
06
x5
04
03
x2
01
00
x.
x-
x,
x+
x*
bx0 )
bx (
b0 '
b0 &
0%
b0 $
b0 #
x"
bx !
$end
#1
1E
1G
1B
18
1`
1V
1~
1t
1>"
14"
1@
1A
12
15
1^
1_
1P
1S
1|
1}
1n
1q
1<"
1="
1."
11"
#2
0+
0I
0g
0'"
0.
0-
0,
0L
0K
0J
0j
0i
0h
0*"
0)"
0("
#3
1=
1[
1y
19"
1F
19
1:
1c
1d
1W
1X
1#"
1$"
1u
1v
1A"
1B"
15"
16"
#4
bx0 !
bx0 (
0D
0*
0H
0f
0&"
#5
1<
1Z
1x
18"
#6
0U
0R
0a
0s
0p
0!"
03"
00"
0?"
0"
0;
0Y
0w
b0 )
07"
#7
1e
1%"
1C"
#8
0b
0""
b0 !
b0 (
0@"
#50
17
14
1C
1>
10
13
1\
1N
1Q
1z
1l
1o
1:"
1,"
1/"
b1 )
1%
b1111 #
b1111 &
#51
0G
0A
05
0_
0}
0="
#52
b1 !
b1 (
1D
1.
1,
1L
1j
1*"
#53
0E
0F
0:
0d
0$"
0B"
#54
1F
1G
1*
1b
1""
b1111 !
b1111 (
1@"
#55
b1110 !
b1110 (
0D
0<
#56
1U
1R
1a
b11 )
1;
#57
0S
0c
0e
#58
1J
1d
1e
#59
0X
b1100 !
b1100 (
0b
#60
1H
#61
0Z
#62
1s
1p
1!"
b111 )
1Y
#63
0q
0#"
0%"
#64
1h
1$"
1%"
#65
0v
b1000 !
b1000 (
0""
#66
1f
#67
0x
#68
13"
10"
1?"
b1111 )
1w
#69
01"
0A"
0C"
#70
1("
1B"
1C"
#71
06"
b0 !
b0 (
0@"
#72
1&"
#73
08"
#74
1"
b11111 )
17"
#100
07
04
0C
1?
11
16
1]
1O
1T
1{
1m
1r
1;"
1-"
12"
b11110 )
0%
b1111 $
b1111 '
#101
15
1E
0@
0B
02
0^
0`
0P
0V
0|
0~
0n
0t
0<"
0>"
0."
04"
#102
0,
0F
1A
1B
1-
1_
1`
1K
1I
1}
1~
1i
1g
1="
1>"
1)"
1'"
#103
1:
b1 !
b1 (
1D
0.
09
0L
0W
0[
0j
0u
0y
0*"
05"
09"
#104
1F
1c
1#"
1A"
#105
b0 !
b0 (
0D
0e
0%"
0C"
#106
1b
1""
b1110 !
b1110 (
1@"
#150
17
14
1C
0?
01
06
0]
0O
0T
0{
0m
0r
0;"
0-"
02"
0>
00
03
0\
0N
0Q
0z
0l
0o
0:"
0,"
0/"
b11111 )
1%
b0 $
b0 '
b0 #
b0 &
#151
0G
1V
1t
14"
1@
12
1^
1P
1S
1|
1n
1q
1<"
1."
11"
#152
b1111 !
b1111 (
1D
0I
0g
0'"
0-
0K
0J
0i
0h
0)"
0("
#153
1[
1y
19"
19
1W
1X
1u
1v
15"
16"
#154
0*
0H
0f
0&"
#155
1<
1Z
1x
18"
#156
0U
0R
0a
0s
0p
0!"
03"
00"
0?"
0"
0;
0Y
0w
b1 )
07"
#157
1e
1%"
1C"
#158
0b
0""
b1 !
b1 (
0@"
#200
07
04
0C
1?
11
16
1{
1m
1r
1\
1N
1Q
1:"
1,"
1/"
b0 )
0%
b101 $
b101 '
b1010 #
b1010 &
#201
1G
0B
0~
0_
0="
#202
b0 !
b0 (
0D
1.
1j
1L
1*"
#203
0F
0$"
0d
0B"
#204
1D
1""
1b
b1111 !
b1111 (
1@"
#250
