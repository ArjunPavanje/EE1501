$date
	Thu Apr 17 19:32:12 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_adder $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " carry_out $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % carry_in $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % carry_in $end
$var wire 4 ( sum [3:0] $end
$var wire 1 " carry_out $end
$var wire 5 ) carry [4:0] $end
$scope begin genblk1[0] $end
$var wire 1 * temp5 $end
$var wire 1 + temp4 $end
$var wire 1 , temp3 $end
$var wire 1 - temp2 $end
$var wire 1 . temp1 $end
$var parameter 2 / i $end
$scope module and1 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 temp $end
$var wire 1 - out $end
$scope module and1 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 out $end
$upscope $end
$scope module and2 $end
$var wire 1 2 a $end
$var wire 1 2 b $end
$var wire 1 - out $end
$upscope $end
$upscope $end
$scope module and2 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 temp $end
$var wire 1 , out $end
$scope module and1 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 out $end
$upscope $end
$scope module and2 $end
$var wire 1 5 a $end
$var wire 1 5 b $end
$var wire 1 , out $end
$upscope $end
$upscope $end
$scope module and3 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 8 temp $end
$var wire 1 + out $end
$scope module and1 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 8 out $end
$upscope $end
$scope module and2 $end
$var wire 1 8 a $end
$var wire 1 8 b $end
$var wire 1 + out $end
$upscope $end
$upscope $end
$scope module or1 $end
$var wire 1 - a $end
$var wire 1 , b $end
$var wire 1 9 temp2 $end
$var wire 1 : temp1 $end
$var wire 1 * out $end
$scope module or1 $end
$var wire 1 - a $end
$var wire 1 - b $end
$var wire 1 : out $end
$upscope $end
$scope module or2 $end
$var wire 1 , a $end
$var wire 1 , b $end
$var wire 1 9 out $end
$upscope $end
$scope module or3 $end
$var wire 1 : a $end
$var wire 1 9 b $end
$var wire 1 * out $end
$upscope $end
$upscope $end
$scope module or2 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 ; temp2 $end
$var wire 1 < temp1 $end
$var wire 1 = out $end
$scope module or1 $end
$var wire 1 * a $end
$var wire 1 * b $end
$var wire 1 < out $end
$upscope $end
$scope module or2 $end
$var wire 1 + a $end
$var wire 1 + b $end
$var wire 1 ; out $end
$upscope $end
$scope module or3 $end
$var wire 1 < a $end
$var wire 1 ; b $end
$var wire 1 = out $end
$upscope $end
$upscope $end
$scope module xor1 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 @ temp3 $end
$var wire 1 A temp2 $end
$var wire 1 B temp1 $end
$var wire 1 . out $end
$scope module xor1 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 B out $end
$upscope $end
$scope module xor2 $end
$var wire 1 > a $end
$var wire 1 B b $end
$var wire 1 A out $end
$upscope $end
$scope module xor3 $end
$var wire 1 B a $end
$var wire 1 ? b $end
$var wire 1 @ out $end
$upscope $end
$scope module xor4 $end
$var wire 1 A a $end
$var wire 1 @ b $end
$var wire 1 . out $end
$upscope $end
$upscope $end
$scope module xor2 $end
$var wire 1 . a $end
$var wire 1 C b $end
$var wire 1 D temp3 $end
$var wire 1 E temp2 $end
$var wire 1 F temp1 $end
$var wire 1 G out $end
$scope module xor1 $end
$var wire 1 . a $end
$var wire 1 C b $end
$var wire 1 F out $end
$upscope $end
$scope module xor2 $end
$var wire 1 . a $end
$var wire 1 F b $end
$var wire 1 E out $end
$upscope $end
$scope module xor3 $end
$var wire 1 F a $end
$var wire 1 C b $end
$var wire 1 D out $end
$upscope $end
$scope module xor4 $end
$var wire 1 E a $end
$var wire 1 D b $end
$var wire 1 G out $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var wire 1 H temp5 $end
$var wire 1 I temp4 $end
$var wire 1 J temp3 $end
$var wire 1 K temp2 $end
$var wire 1 L temp1 $end
$var parameter 2 M i $end
$scope module and1 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 P temp $end
$var wire 1 K out $end
$scope module and1 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 P out $end
$upscope $end
$scope module and2 $end
$var wire 1 P a $end
$var wire 1 P b $end
$var wire 1 K out $end
$upscope $end
$upscope $end
$scope module and2 $end
$var wire 1 Q a $end
$var wire 1 R b $end
$var wire 1 S temp $end
$var wire 1 J out $end
$scope module and1 $end
$var wire 1 Q a $end
$var wire 1 R b $end
$var wire 1 S out $end
$upscope $end
$scope module and2 $end
$var wire 1 S a $end
$var wire 1 S b $end
$var wire 1 J out $end
$upscope $end
$upscope $end
$scope module and3 $end
$var wire 1 T a $end
$var wire 1 U b $end
$var wire 1 V temp $end
$var wire 1 I out $end
$scope module and1 $end
$var wire 1 T a $end
$var wire 1 U b $end
$var wire 1 V out $end
$upscope $end
$scope module and2 $end
$var wire 1 V a $end
$var wire 1 V b $end
$var wire 1 I out $end
$upscope $end
$upscope $end
$scope module or1 $end
$var wire 1 K a $end
$var wire 1 J b $end
$var wire 1 W temp2 $end
$var wire 1 X temp1 $end
$var wire 1 H out $end
$scope module or1 $end
$var wire 1 K a $end
$var wire 1 K b $end
$var wire 1 X out $end
$upscope $end
$scope module or2 $end
$var wire 1 J a $end
$var wire 1 J b $end
$var wire 1 W out $end
$upscope $end
$scope module or3 $end
$var wire 1 X a $end
$var wire 1 W b $end
$var wire 1 H out $end
$upscope $end
$upscope $end
$scope module or2 $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 Y temp2 $end
$var wire 1 Z temp1 $end
$var wire 1 [ out $end
$scope module or1 $end
$var wire 1 H a $end
$var wire 1 H b $end
$var wire 1 Z out $end
$upscope $end
$scope module or2 $end
$var wire 1 I a $end
$var wire 1 I b $end
$var wire 1 Y out $end
$upscope $end
$scope module or3 $end
$var wire 1 Z a $end
$var wire 1 Y b $end
$var wire 1 [ out $end
$upscope $end
$upscope $end
$scope module xor1 $end
$var wire 1 \ a $end
$var wire 1 ] b $end
$var wire 1 ^ temp3 $end
$var wire 1 _ temp2 $end
$var wire 1 ` temp1 $end
$var wire 1 L out $end
$scope module xor1 $end
$var wire 1 \ a $end
$var wire 1 ] b $end
$var wire 1 ` out $end
$upscope $end
$scope module xor2 $end
$var wire 1 \ a $end
$var wire 1 ` b $end
$var wire 1 _ out $end
$upscope $end
$scope module xor3 $end
$var wire 1 ` a $end
$var wire 1 ] b $end
$var wire 1 ^ out $end
$upscope $end
$scope module xor4 $end
$var wire 1 _ a $end
$var wire 1 ^ b $end
$var wire 1 L out $end
$upscope $end
$upscope $end
$scope module xor2 $end
$var wire 1 L a $end
$var wire 1 a b $end
$var wire 1 b temp3 $end
$var wire 1 c temp2 $end
$var wire 1 d temp1 $end
$var wire 1 e out $end
$scope module xor1 $end
$var wire 1 L a $end
$var wire 1 a b $end
$var wire 1 d out $end
$upscope $end
$scope module xor2 $end
$var wire 1 L a $end
$var wire 1 d b $end
$var wire 1 c out $end
$upscope $end
$scope module xor3 $end
$var wire 1 d a $end
$var wire 1 a b $end
$var wire 1 b out $end
$upscope $end
$scope module xor4 $end
$var wire 1 c a $end
$var wire 1 b b $end
$var wire 1 e out $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var wire 1 f temp5 $end
$var wire 1 g temp4 $end
$var wire 1 h temp3 $end
$var wire 1 i temp2 $end
$var wire 1 j temp1 $end
$var parameter 3 k i $end
$scope module and1 $end
$var wire 1 l a $end
$var wire 1 m b $end
$var wire 1 n temp $end
$var wire 1 i out $end
$scope module and1 $end
$var wire 1 l a $end
$var wire 1 m b $end
$var wire 1 n out $end
$upscope $end
$scope module and2 $end
$var wire 1 n a $end
$var wire 1 n b $end
$var wire 1 i out $end
$upscope $end
$upscope $end
$scope module and2 $end
$var wire 1 o a $end
$var wire 1 p b $end
$var wire 1 q temp $end
$var wire 1 h out $end
$scope module and1 $end
$var wire 1 o a $end
$var wire 1 p b $end
$var wire 1 q out $end
$upscope $end
$scope module and2 $end
$var wire 1 q a $end
$var wire 1 q b $end
$var wire 1 h out $end
$upscope $end
$upscope $end
$scope module and3 $end
$var wire 1 r a $end
$var wire 1 s b $end
$var wire 1 t temp $end
$var wire 1 g out $end
$scope module and1 $end
$var wire 1 r a $end
$var wire 1 s b $end
$var wire 1 t out $end
$upscope $end
$scope module and2 $end
$var wire 1 t a $end
$var wire 1 t b $end
$var wire 1 g out $end
$upscope $end
$upscope $end
$scope module or1 $end
$var wire 1 i a $end
$var wire 1 h b $end
$var wire 1 u temp2 $end
$var wire 1 v temp1 $end
$var wire 1 f out $end
$scope module or1 $end
$var wire 1 i a $end
$var wire 1 i b $end
$var wire 1 v out $end
$upscope $end
$scope module or2 $end
$var wire 1 h a $end
$var wire 1 h b $end
$var wire 1 u out $end
$upscope $end
$scope module or3 $end
$var wire 1 v a $end
$var wire 1 u b $end
$var wire 1 f out $end
$upscope $end
$upscope $end
$scope module or2 $end
$var wire 1 f a $end
$var wire 1 g b $end
$var wire 1 w temp2 $end
$var wire 1 x temp1 $end
$var wire 1 y out $end
$scope module or1 $end
$var wire 1 f a $end
$var wire 1 f b $end
$var wire 1 x out $end
$upscope $end
$scope module or2 $end
$var wire 1 g a $end
$var wire 1 g b $end
$var wire 1 w out $end
$upscope $end
$scope module or3 $end
$var wire 1 x a $end
$var wire 1 w b $end
$var wire 1 y out $end
$upscope $end
$upscope $end
$scope module xor1 $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | temp3 $end
$var wire 1 } temp2 $end
$var wire 1 ~ temp1 $end
$var wire 1 j out $end
$scope module xor1 $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 ~ out $end
$upscope $end
$scope module xor2 $end
$var wire 1 z a $end
$var wire 1 ~ b $end
$var wire 1 } out $end
$upscope $end
$scope module xor3 $end
$var wire 1 ~ a $end
$var wire 1 { b $end
$var wire 1 | out $end
$upscope $end
$scope module xor4 $end
$var wire 1 } a $end
$var wire 1 | b $end
$var wire 1 j out $end
$upscope $end
$upscope $end
$scope module xor2 $end
$var wire 1 j a $end
$var wire 1 !" b $end
$var wire 1 "" temp3 $end
$var wire 1 #" temp2 $end
$var wire 1 $" temp1 $end
$var wire 1 %" out $end
$scope module xor1 $end
$var wire 1 j a $end
$var wire 1 !" b $end
$var wire 1 $" out $end
$upscope $end
$scope module xor2 $end
$var wire 1 j a $end
$var wire 1 $" b $end
$var wire 1 #" out $end
$upscope $end
$scope module xor3 $end
$var wire 1 $" a $end
$var wire 1 !" b $end
$var wire 1 "" out $end
$upscope $end
$scope module xor4 $end
$var wire 1 #" a $end
$var wire 1 "" b $end
$var wire 1 %" out $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var wire 1 &" temp5 $end
$var wire 1 '" temp4 $end
$var wire 1 (" temp3 $end
$var wire 1 )" temp2 $end
$var wire 1 *" temp1 $end
$var parameter 3 +" i $end
$scope module and1 $end
$var wire 1 ," a $end
$var wire 1 -" b $end
$var wire 1 ." temp $end
$var wire 1 )" out $end
$scope module and1 $end
$var wire 1 ," a $end
$var wire 1 -" b $end
$var wire 1 ." out $end
$upscope $end
$scope module and2 $end
$var wire 1 ." a $end
$var wire 1 ." b $end
$var wire 1 )" out $end
$upscope $end
$upscope $end
$scope module and2 $end
$var wire 1 /" a $end
$var wire 1 0" b $end
$var wire 1 1" temp $end
$var wire 1 (" out $end
$scope module and1 $end
$var wire 1 /" a $end
$var wire 1 0" b $end
$var wire 1 1" out $end
$upscope $end
$scope module and2 $end
$var wire 1 1" a $end
$var wire 1 1" b $end
$var wire 1 (" out $end
$upscope $end
$upscope $end
$scope module and3 $end
$var wire 1 2" a $end
$var wire 1 3" b $end
$var wire 1 4" temp $end
$var wire 1 '" out $end
$scope module and1 $end
$var wire 1 2" a $end
$var wire 1 3" b $end
$var wire 1 4" out $end
$upscope $end
$scope module and2 $end
$var wire 1 4" a $end
$var wire 1 4" b $end
$var wire 1 '" out $end
$upscope $end
$upscope $end
$scope module or1 $end
$var wire 1 )" a $end
$var wire 1 (" b $end
$var wire 1 5" temp2 $end
$var wire 1 6" temp1 $end
$var wire 1 &" out $end
$scope module or1 $end
$var wire 1 )" a $end
$var wire 1 )" b $end
$var wire 1 6" out $end
$upscope $end
$scope module or2 $end
$var wire 1 (" a $end
$var wire 1 (" b $end
$var wire 1 5" out $end
$upscope $end
$scope module or3 $end
$var wire 1 6" a $end
$var wire 1 5" b $end
$var wire 1 &" out $end
$upscope $end
$upscope $end
$scope module or2 $end
$var wire 1 &" a $end
$var wire 1 '" b $end
$var wire 1 7" temp2 $end
$var wire 1 8" temp1 $end
$var wire 1 9" out $end
$scope module or1 $end
$var wire 1 &" a $end
$var wire 1 &" b $end
$var wire 1 8" out $end
$upscope $end
$scope module or2 $end
$var wire 1 '" a $end
$var wire 1 '" b $end
$var wire 1 7" out $end
$upscope $end
$scope module or3 $end
$var wire 1 8" a $end
$var wire 1 7" b $end
$var wire 1 9" out $end
$upscope $end
$upscope $end
$scope module xor1 $end
$var wire 1 :" a $end
$var wire 1 ;" b $end
$var wire 1 <" temp3 $end
$var wire 1 =" temp2 $end
$var wire 1 >" temp1 $end
$var wire 1 *" out $end
$scope module xor1 $end
$var wire 1 :" a $end
$var wire 1 ;" b $end
$var wire 1 >" out $end
$upscope $end
$scope module xor2 $end
$var wire 1 :" a $end
$var wire 1 >" b $end
$var wire 1 =" out $end
$upscope $end
$scope module xor3 $end
$var wire 1 >" a $end
$var wire 1 ;" b $end
$var wire 1 <" out $end
$upscope $end
$scope module xor4 $end
$var wire 1 =" a $end
$var wire 1 <" b $end
$var wire 1 *" out $end
$upscope $end
$upscope $end
$scope module xor2 $end
$var wire 1 *" a $end
$var wire 1 ?" b $end
$var wire 1 @" temp3 $end
$var wire 1 A" temp2 $end
$var wire 1 B" temp1 $end
$var wire 1 C" out $end
$scope module xor1 $end
$var wire 1 *" a $end
$var wire 1 ?" b $end
$var wire 1 B" out $end
$upscope $end
$scope module xor2 $end
$var wire 1 *" a $end
$var wire 1 B" b $end
$var wire 1 A" out $end
$upscope $end
$scope module xor3 $end
$var wire 1 B" a $end
$var wire 1 ?" b $end
$var wire 1 @" out $end
$upscope $end
$scope module xor4 $end
$var wire 1 A" a $end
$var wire 1 @" b $end
$var wire 1 C" out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 +"
b10 k
b1 M
b0 /
$end
#0
$dumpvars
1C"
1B"
1A"
0@"
1?"
0>"
1="
1<"
1;"
1:"
19"
08"
07"
06"
05"
04"
13"
12"
01"
10"
1/"
0."
1-"
1,"
0*"
1)"
1("
1'"
1&"
0%"
0$"
1#"
1""
1!"
1~
0}
1|
0{
1z
1y
0x
1w
1v
0u
1t
1s
0r
0q
1p
1o
1n
0m
1l
1j
0i
1h
0g
1f
0e
0d
1c
1b
1a
1`
1_
0^
1]
0\
1[
1Z
0Y
1X
1W
0V
1U
1T
1S
1R
0Q
1P
1O
0N
1L
0K
0J
1I
0H
1G
1F
1E
0D
1C
0B
1A
1@
1?
1>
1=
0<
0;
0:
09
08
17
16
05
14
13
02
11
10
0.
1-
1,
1+
1*
b11111 )
b1001 (
b1011 '
b1101 &
1%
b1011 $
b1101 #
1"
b1001 !
$end
#1
0"
09"
17"
0'"
14"
03"
00"
0?"
0y
1x
1e
0f
0c
1u
1%"
1d
1""
0h
0#"
0U
0R
0a
0=
1C"
1q
1$"
1<
1Z
1@"
18"
0s
0p
0!"
0[
0E
0*
0H
1B"
0A"
0&"
1;
1Y
1.
1:
19
1W
1*"
16"
15"
0+
b1111 !
b1111 (
1G
0I
0@
0-
0,
0J
0<"
0)"
0("
18
1D
1^
1V
1B
12
15
0_
1S
1>"
1."
11"
07
04
0C
0]
0O
0T
0>
00
03
1\
1N
1Q
0:"
0,"
0/"
b0 )
0%
b1001 $
b1001 '
b110 #
b110 &
#2
0w
0u
07"
05"
0Y
0W
1g
1h
1'"
1("
1I
1J
0t
0q
0""
04"
01"
0@"
0V
0S
0b
1s
1p
1!"
13"
10"
1?"
1U
1R
1a
1"
1[
1y
1=
b11110 )
19"
1e
0Z
1%"
0x
0G
0<
b1110 !
b1110 (
1C"
08"
1c
1H
1#"
1f
1E
1*
1A"
1&"
0L
0X
0j
0v
0.
0:
0*"
06"
1_
1K
1}
1i
1@
1-
1<"
1)"
0`
1^
0P
0~
1|
0n
0B
1A
02
0>"
1="
0."
1]
1O
1T
1{
1m
1r
1>
10
13
1:"
1,"
1/"
b1111 $
b1111 '
b1111 #
b1111 &
#3
0e
0%"
0C"
1b
1""
1@"
0U
0R
0a
0s
0p
0!"
03"
00"
0?"
0"
0=
0[
0y
09"
1<
1Z
1x
18"
0*
0H
0f
0&"
1Y
1w
17"
1:
1X
1W
1v
1u
16"
15"
b1 !
b1 (
1G
0I
0g
0'"
0-
0K
0J
0i
0h
0)"
0("
0D
1V
1t
14"
1B
12
1`
1P
1S
1~
1n
1q
1>"
1."
11"
17
14
1C
0?
01
06
0]
0O
0T
0{
0m
0r
0;"
0-"
02"
0>
00
03
0\
0N
0Q
0z
0l
0o
0:"
0,"
0/"
b1 )
1%
b0 $
b0 '
b0 #
b0 &
#4
1%"
1e
1C"
0E
0#"
0c
0A"
b1111 !
b1111 (
1G
1.
1j
1L
1*"
1D
0@
0|
0_
0="
07
04
0C
1?
11
16
1{
1m
1r
1\
1N
1Q
1:"
1,"
1/"
b0 )
0%
b101 $
b101 '
b1010 #
b1010 &
#5
